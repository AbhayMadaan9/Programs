#include <bits/stdc++.h> 
//https://www.codingninjas.com/codestudio/problems/path-in-a-tree_3843990?leftPanelTab=1
/*   
    template <typename T = int>
	class TreeNode
	{
		public:
		T data;
		TreeNode<T> *left;
		TreeNode<T> *right;

		TreeNode(T data)
		{
			this->data = data;
			left = NULL;
			right = NULL;
		}

		~TreeNode()
		{
			if (left != NULL)
			{
		  		delete left;
			}
			if (right != NULL)
			{
			 	delete right;
			}
		}
	};
*/

bool solve(TreeNode<int> *root, int x, vector<int>& ans)
{
    if(root == NULL) return false;
    ans.push_back(root->data);
    if(root->data == x) return true; 
    bool left_subtree_search = solve(root->left, x, ans);
    bool right_subtree_search = solve(root->right, x, ans);
    
    //if either of subtree found the node we return true
    if(left_subtree_search or right_subtree_search) return true;
    else
        {
        ans.pop_back();
        return false;
        }
}
vector<int> pathInATree(TreeNode<int> *root, int x)
{
   vector<int> ans; 
    if(root == NULL) return ans;
   solve(root, x, ans);
    return ans;
}
