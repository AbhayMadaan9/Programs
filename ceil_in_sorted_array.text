#include <bits/stdc++.h> 
//https://www.codingninjas.com/codestudio/problems/ceiling-in-a-sorted-array_1825401
int solve_binary(vector<int>arr, int l, int r, int x)
    {
    //Binary search method
    
     int start=0;
    int end=arr.size()-1;
    int mid=(start+end)/2;
    while(start<=end){
     if((arr[mid]==x||arr[mid]>x)&&(arr[mid-1]<x&&arr[mid+1]>x)){
        return arr[mid];
     }
     else if(x>arr[mid]){
       start=mid+1;
     }
     else{
        end=mid-1;
     }
     mid=(start+end)/2;
    }   
   return -1;

}


int solve_linearly(int n, int x, vector<int> arr)
{
    //linear method    
    
      //base case
        if(arr[0] > x) return arr[0];  //special case for first element. when X is smaller than first element becomes Ceil
    for(int i = 0; i < n; i++)
    {
        if(arr[i] == x) return x;
        if(x > arr[i] and arr[i+1] > x) return arr[i+1]; 
     }
    return -1;
}
int ceilingInSortedArray(int n, int x, vector<int> &arr){
//     if(x > 5) //random condition 
//     {
//         return solve_linearly(n, x, arr);
//     }
    return solve_binary(arr, 0, n-1, x);
}

