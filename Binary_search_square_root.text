//https://www.codingninjas.com/codestudio/problems/square-root-of-an-integer_1089689?leftPanelTab=0

#include <bits/stdc++.h> 
int squareRoot(int x)
{
	if (x == 0 || x == 1)
        return x;
 
    int start = 1, end = x / 2, ans;         //up to x/2 binary search is done because the squrae root from half of that number will surely be greater than that number 
    while (start <= end) {
        int mid = (start + end) / 2;
 
        // If x is a perfect square
        int sqr = mid * mid;
        if (sqr == x)
            return mid;
        
        if (sqr <= x) {
            start = mid + 1;
            ans = mid;
        }
        else 
            end = mid - 1;
    }
    return ans;
}
