#include <bits/stdc++.h> 
/*************************************************************

    Following is the Binary Tree node structure

    template <typename T>

    class BinaryTreeNode
    {
    public :
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }

        ~BinaryTreeNode() {
            if (left)
            {
                delete left;
            }
            if (right)
            {
                delete right;
            }
        }
    };

*************************************************************/
//https://www.codingninjas.com/codestudio/problems/_893049?leftPanelTab=1
int ipre(BinaryTreeNode<int>* root, int key)
{
    int pre = -1;
    BinaryTreeNode<int>*temp = root;
    while(temp != NULL)
    {
        if(key <= temp->data){  temp = temp->left;} 
        else {pre = temp->data; temp = temp->right;  }
    }
    return pre;
}
int isucc(BinaryTreeNode<int>* root, int key)
{
    int succ = -1;
    BinaryTreeNode<int>*temp = root;
    while(temp != NULL)
    {
        if(key >= temp->data) temp = temp->right; 
        else { succ = temp->data; temp = temp->left; }
    }
    return succ;
}
pair<int,int> predecessorSuccessor(BinaryTreeNode<int>* root, int key)
{
    pair<int, int>ans;
    ans.first = ipre(root, key);
    ans.second = isucc(root, key);
    return ans;
}
