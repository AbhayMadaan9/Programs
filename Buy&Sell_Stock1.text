//https://www.codingninjas.com/codestudio/problems/893405?leftPanelTab=1

#include <bits/stdc++.h> 
int solve_brute_force(vector<int> &arr)
{
    int n = arr.size();
    int max_profit = 0;
    for(int i = 0; i < n; i++)
    {
        for(int j = i+1; j < n; j++)
        {
            int profit = arr[j] - arr[i];    //sell - buy
            max_profit = max(profit, max_profit);
         }
    }
    return max_profit;
}
//In this we will handle one minimum price to buy and maximum profit variable which keeps on updating i.e. minimum price according to the current price and maximum profit according to the comparison with  differnce current price and minimum price with prev. maximum profit 
int solve_optimal(vector<int> arr)
{
    int n = arr.size();
    int max_profit = INT_MIN;
    int min_price = INT_MAX;
    for(int i = 0; i < n; i++)
    {
        if(arr[i] < min_price) min_price = arr[i];
        int profit = arr[i] - min_price;
        max_profit = max(profit, max_profit);
    }
    return max_profit;
}
int maximumProfit(vector<int> &prices){
    return solve_optimal(prices);
}