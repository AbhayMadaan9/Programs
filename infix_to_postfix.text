//https://www.codingninjas.com/codestudio/problems/infix-to-postfix_1382146?leftPanelTab=1
#include <bits/stdc++.h> 
int prec(char x)
{
    if(x == '^') return 3;
    else if(x == '*' or x == '/') return 2;
    else if(x == '+' or x == '-') return 1;
    else return -1;
}
string infixToPostfix(string exp){
  stack < char > st; //For stack operations, we are using C++ built in stack
  string result;

  for (int i = 0; i < exp.length(); i++) {
    char c = exp[i];

    // If the scanned character is
    // an operand, add it to output string.
    if ((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || (c >= '0' && c <= '9'))
      result += c;

    // If the scanned character is an
    // ‘(‘, push it to the stack.
    else if (c == '(')
      st.push('(');

    // If the scanned character is an ‘)’,
    // pop and to output string from the stack
    // until an ‘(‘ is encountered.
    else if (c == ')') {
      while (st.top() != '(') {
        result += st.top();
        st.pop();
      }
      st.pop();
    }

    //If an operator is scanned
    else {
      while (!st.empty() && prec(c) <= prec(st.top())) {
        result += st.top();
        st.pop();
      }
      st.push(c);
    }
  }

  // Pop all the remaining elements from the stack
  while (!st.empty()) {
    result += st.top();
    st.pop();
  }

    return result;
}